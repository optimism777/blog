{"remainingRequest":"/Users/wangxiaofang/Desktop/practice/blogs/node_modules/babel-loader/lib/index.js!/Users/wangxiaofang/Desktop/practice/blogs/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangxiaofang/Desktop/practice/blogs/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangxiaofang/Desktop/practice/blogs/src/components/Article/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangxiaofang/Desktop/practice/blogs/src/components/Article/index.vue","mtime":1559633650396},{"path":"/Users/wangxiaofang/Desktop/practice/blogs/node_modules/cache-loader/dist/cjs.js","mtime":1555470515450},{"path":"/Users/wangxiaofang/Desktop/practice/blogs/node_modules/babel-loader/lib/index.js","mtime":1555470512425},{"path":"/Users/wangxiaofang/Desktop/practice/blogs/node_modules/cache-loader/dist/cjs.js","mtime":1555470515450},{"path":"/Users/wangxiaofang/Desktop/practice/blogs/node_modules/vue-loader/lib/index.js","mtime":1555470515681}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import { getArticle } from '@/api/request'\nexport default {\n  name: 'Content',\n  data: function data() {\n    return {\n      timeTxt: ''\n    };\n  },\n  methods: {\n    goToDetail: function goToDetail() {\n      this.$router.push({\n        name: 'Detail',\n        path: '/detail'\n      });\n    },\n    goToAbout: function goToAbout() {\n      this.$router.push({\n        name: 'About'\n      });\n    }\n  },\n  created: function created() {// getArticle()\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA,QAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA,KAHA;AAIA,IAAA,SAJA,uBAIA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA;AANA,GAPA;AAeA,EAAA,OAfA,qBAeA,CACA;AACA;AAjBA,CAAA","sourcesContent":["<template>\n  <div class=\"article\">\n  <ul>\n    <!-- <router-link to=\"/detail\"> -->\n      <li class=\"article-list\" @click=\"goToDetail\">\n        <div class=\"img-div\">\n          <a href=\"\">\n            <img src=\"@/assets/img/avator.png\" alt=\"\" class=\"imga\">\n          </a>\n        </div>\n        <div class=\"content-div\">\n          <a href=\"\" class=\"title\">\n            <span>服务器简单搭建操作</span>\n          </a>\n          <a href=\"\" class=\"content\">\n            <span>工作中一般都是前后端分离，很少关注后端的操作实现，所以想借助空闲时间学些后端知识。本想捡起在大学期间学过的MySQL知识，不过到现在已经忘得差不多了。最近看到MongoDB这个数据库对JavaScript支持很友好，并且支持的数据结构非常松散，是类似json的bson格式，可以存储比较复杂的数据类型。我觉得值得尝试学习下。😎后端分离，很少关注后端的操作实现，所以想借助空闲时间学些后端知识。本想捡起在大学期间学过的MySQL知识，不过到现在已经忘得差不多了。最近看到MongoDB这个数据库对JavaScript支持很友好，并且支持的数据结构非常松散，是类似json的bson格式，可以存储比较复杂的数据类型。我觉得\n            </span>\n          </a>\n          <div class=\"bottom-div\">\n            <span>随笔札记-王晓芳</span>\n            <span>2019-05-08</span>\n            <span>222次浏览</span>\n            <span>13条评论</span>\n          </div>\n        </div>\n    </li>\n    <!-- </router-link> -->\n     <li class=\"article-list\" @click=\"goToDetail\">\n      <div class=\"img-div\">\n        <a href=\"\">\n          <img src=\"@/assets/img/avator.png\" alt=\"\" class=\"imga\">\n        </a>\n      </div>\n      <div class=\"content-div\">\n        <a href=\"\" class=\"title\">\n          <span>服务器简单搭建操作</span>\n        </a>\n        <a href=\"\" class=\"content\">\n          <span>工作中一般都是前后端分离，很少关注后端的操作实现，所以想借助空闲时间学些后端知识。本想捡起在大学期间学过的MySQL知识，不过到现在已经忘得差不多了。最近看到MongoDB这个数据库对JavaScript支持很友好，并且支持的数据结构非常松散，是类似json的bson格式，可以存储比较复杂的数据类型。我觉得值得尝试学习下。😎后端分离，很少关注后端的操作实现，所以想借助空闲时间学些后端知识。本想捡起在大学期间学过的MySQL知识，不过到现在已经忘得差不多了。最近看到MongoDB这个数据库对JavaScript支持很友好，并且支持的数据结构非常松散，是类似json的bson格式，可以存储比较复杂的数据类型。我觉得\n          </span>\n        </a>\n        <div class=\"bottom-div\">\n          <span>随笔札记-王晓芳</span>\n          <span>2019-05-08</span>\n          <span>222次浏览</span>\n          <span>13条评论</span>\n        </div>\n      </div>\n    </li>\n     <li class=\"article-list\" @click=\"goToDetail\">\n      <div class=\"img-div\">\n        <a href=\"\">\n          <img src=\"@/assets/img/avator.png\" alt=\"\" class=\"imga\">\n        </a>\n      </div>\n      <div class=\"content-div\">\n        <a href=\"\" class=\"title\">\n          <span>服务器简单搭建操作</span>\n        </a>\n        <a href=\"\" class=\"content\">\n          <span>工作中一般都是前后端分离，很少关注后端的操作实现，所以想借助空闲时间学些后端知识。本想捡起在大学期间学过的MySQL知识，不过到现在已经忘得差不多了。最近看到MongoDB这个数据库对JavaScript支持很友好，并且支持的数据结构非常松散，是类似json的bson格式，可以存储比较复杂的数据类型。我觉得值得尝试学习下。😎后端分离，很少关注后端的操作实现，所以想借助空闲时间学些后端知识。本想捡起在大学期间学过的MySQL知识，不过到现在已经忘得差不多了。最近看到MongoDB这个数据库对JavaScript支持很友好，并且支持的数据结构非常松散，是类似json的bson格式，可以存储比较复杂的数据类型。我觉得\n          </span>\n        </a>\n        <div class=\"bottom-div\">\n          <span>随笔札记-王晓芳</span>\n          <span>2019-05-08</span>\n          <span>222次浏览</span>\n          <span>13条评论</span>\n        </div>\n      </div>\n    </li>\n  </ul>\n  </div>\n</template>\n\n<script>\n// import { getArticle } from '@/api/request'\nexport default {\n  name: 'Content',\n  data () {\n    return {\n      timeTxt: ''\n    }\n  },\n  methods: {\n    goToDetail () {\n      this.$router.push({ name: 'Detail', path: '/detail' })\n    },\n    goToAbout () {\n      this.$router.push({ name: 'About' })\n    }\n  },\n  created () {\n    // getArticle()\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n@import url('./index.less');\n</style>\n"],"sourceRoot":"src/components/Article"}]}