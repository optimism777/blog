{"remainingRequest":"/Users/wangxiaofang/Desktop/practice/blogs/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangxiaofang/Desktop/practice/blogs/src/components/DetailCard/index.vue?vue&type=style&index=0&id=4e7ea674&lang=less&scoped=true&","dependencies":[{"path":"/Users/wangxiaofang/Desktop/practice/blogs/src/components/DetailCard/index.vue","mtime":1557382632533},{"path":"/Users/wangxiaofang/Desktop/practice/blogs/node_modules/css-loader/index.js","mtime":1555470515501},{"path":"/Users/wangxiaofang/Desktop/practice/blogs/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1555470515681},{"path":"/Users/wangxiaofang/Desktop/practice/blogs/node_modules/postcss-loader/src/index.js","mtime":1547175105618},{"path":"/Users/wangxiaofang/Desktop/practice/blogs/node_modules/less-loader/dist/cjs.js","mtime":1556269390538},{"path":"/Users/wangxiaofang/Desktop/practice/blogs/node_modules/cache-loader/dist/cjs.js","mtime":1555470515450},{"path":"/Users/wangxiaofang/Desktop/practice/blogs/node_modules/vue-loader/lib/index.js","mtime":1555470515681}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import url('./index.less');\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA","file":"index.vue","sourceRoot":"src/components/DetailCard","sourcesContent":["<template>\n  <div class=\"detail-card\">\n    <div class=\"card-container\">\n      <div class=\"detail-top\">\n        <img src=\"@/assets/img/bg.png\" alt=\"\">\n      </div>\n      <div class=\"detail-description\">\n        <p>关于 JavaScript 数组乱序的方法有多种实现方式，或者借助一些第三方开源工具库如 loadsh 也可以轻松实现，然而要做到数组足够的无规律乱序也非易予，还是有一些要点需要考虑。</p>\n      </div>\n      <div class=\"detail-content\">\n        <p>关于 JavaScript 数组乱序的方法有多种实现方式，或者借助一些第三方开源工具库如 loadsh 也可以轻松实现，然而要做到数组足够的无规律乱序也非易予，还是有一些要点需要考虑。</p>\n         <p>关于 JavaScript 数组乱序的方法有多种实现方式，或者借助一些第三方开源工具库如 loadsh 也可以轻松实现，然而要做到数组足够的无规律乱序也非易予，还是有一些要点需要考虑。</p>\n      </div>\n      <div class=\"category-content\">\n        <div class=\"prev\">\n          上一篇: {{prevTitle}}\n        </div>\n        <div class=\"next\">\n          下一篇: {{nextTitle}}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'DetailCard',\n  data () {\n    return {\n      prevTitle: 'Git常用命令整理',\n      nextTitle: '服务器的简单搭建'\n    }\n  },\n  methods: {\n  },\n  created () {\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n@import url('./index.less');\n</style>\n"]}]}